#+TITLE: cratup_auto — Module Management Tool
#+AUTHOR: emporas
#+EMAIL: emporas@example.com
#+DATE: 2025-04-19
#+DESCRIPTION: A tool for automating version bumps, searches, and publishing of Rust crates.
#+KEYWORDS: rust, cargo, crates, automation, versioning
#+LANGUAGE: en
#+OPTIONS: toc:nil

* Table of Contents
- [[#overview][Overview]]
- [[#installation][Installation]]
- [[#configuration][Configuration]]
- [[#commands][Commands]]
  - [[#init][init]]
  - [[#incv][incv]]
  - [[#search][search]]
  - [[#publish][publish]]
  - [[#help][help]]
- [[#usage-examples][Usage Examples]]
- [[#license][License]]

* Overview                                                                     :overview:
`cratup_auto` is a CLI tool that helps you manage your Rust workspace by:
  - Automatically increasing local crate versions in `Cargo.toml` files
  - Searching for crates by name or version
  - Recursively publishing crates to crates.io

It scans the current directory tree for `Cargo.toml` files and increases version in all nested Cargo files.

* Installation                                                                 :installation:
Directly from crates.io:

#+BEGIN_SRC bash
cargo install cratup_auto
#+END_SRC


To install the latest version from source, run:

#+BEGIN_SRC bash
git clone https://github.com/your_org/cratup_auto.git
cd cratup_auto
cargo install --path .
#+END_SRC

Ensure you have Rust and Cargo (>=1.60) installed.
* Configuration :configuration:
Init saves just one command for the moment

#+BEGIN_SRC bash
cratup_auto init
#+END_SRC

* Commands :commands:

** incv :incv:
Increment one or more crate versions.

Usage:

#+BEGIN_SRC bash
cratup_auto incv \
  --current-version 0.4.1 \
  --next-version    0.4.2 \
  [--package-name   my_crate] \
  [-y|--yes]
#+END_SRC

Flags:

  - `-i`, `--current-version <CURRENT>`   Version to replace (e.g. `0.4.1`).
  - `-r`, `--next-version <NEXT>`         New version to set (e.g. `0.4.2`).
  - `-p`, `--package-name <NAME>`         Optional specific crate to bump.
  - `-y`, `--yes`                         Skip confirmation prompt.
  - `-v`, `--verbose`                     Increase logging detail.
  - `-q`, `--quiet`                       Suppress non-error output.

Example (interactive):

#+BEGIN_SRC bash
$ cratup_auto incv -i 1.2.3 -r 1.2.4
Found 3 crates at version 1.2.3:
  - crate_a/1.2.3
  - crate_b/1.2.3
  - crate_c/1.2.3
Proceed to bump all to 1.2.4? [y/N] y
✔ crate_a updated to 1.2.4
✔ crate_b updated to 1.2.4
✔ crate_c updated to 1.2.4
#+END_SRC

** search                                                                     :search:
Search for crates by name and/or version.

Usage:

#+BEGIN_SRC bash
cratup_auto search \
  [--package-name <PACKAGE>] \
  [--version      <VERSION>]
#+END_SRC

Flags:

  - `-p`, `--package-name <PACKAGE>`  Filter by crate name (supports substring).
  - `-i`, `--version <VERSION>`       Filter by exact version (e.g. `0.4.1`).
  - `-v`, `--verbose`                 Show full path to each found `Cargo.toml`.
  - `-q`, `--quiet`                   Only list paths, no headers.

Example:

#+BEGIN_SRC bash
$ cratup_auto search -p serde -i 1.0.130
Found 2 matches:
  ./crates/serde/serde-derive/Cargo.toml (version 1.0.130)
  ./vendor/serde/Cargo.toml          (version 1.0.130)
#+END_SRC

** publish                                                                    :publish:
Recursively publish all crates found under the current directory.

Usage:

#+BEGIN_SRC bash
cratup_auto publish \
  [--dry-run] \
  [-v|--verbose] \
  [-q|--quiet]
#+END_SRC

Flags:

  - `--dry-run`       Show what would be published without executing.
  - `-v`, `--verbose` Increase verbosity.
  - `-q`, `--quiet`   Only print crates being published.

Example:

#+BEGIN_SRC bash
$ cratup_auto publish --dry-run
Would publish:
  crates/crate_a v0.4.2
  crates/crate_b v0.1.0
  examples/demo_app v0.1.0
#+END_SRC

** help                                                                       :help:
Prints help for any subcommand.

#+BEGIN_SRC bash
cratup_auto help <COMMAND>
#+END_SRC

Or use `-h` / `--help` on any command:

#+BEGIN_SRC bash
cratup_auto incv -h
#+END_SRC

* Usage Examples                                                             :usage-examples:
[[./assets/increase_version.png]]

- **Version increase by specifying package**
   Bump only `my_crate` from `0.4.1` to `0.5.0` without prompts:

   #+BEGIN_SRC bash
   cratup_auto incv -p my_crate -i 0.4.1 -r 0.5.0 -y
   #+END_SRC

[[./assets/increase_version.png]]
- **Version increase by specifying package**
   Bump only `my_crate` from `0.4.1` to `0.5.0` without prompts:

   #+BEGIN_SRC bash
   cratup_auto incv -p my_crate -i 0.4.1 -r 0.5.0 -p package_name -y
   #+END_SRC

[[./assets/increase_version_with_package.png]]
- **Search for all crates**

   #+BEGIN_SRC bash
   cratup_auto search
   #+END_SRC

[[./assets/general_search.png]]
- **Search for all crates**

   #+BEGIN_SRC bash
   cratup_auto search -p half_name
   #+END_SRC

[[./assets/fuzzy_search.png]]

- **Search for all crates at a given version**

   #+BEGIN_SRC bash
   cratup_auto search -i 0.3.0
   #+END_SRC

[[./assets/search_version.png]]
- **Search for all crates at a given version**

   #+BEGIN_SRC bash
   cratup_auto search -i 0.3.0 -p package_name
   #+END_SRC

[[./assets/search_version_with_package.png]]

- **Publish all version updates**

   #+BEGIN_SRC bash
   cratup_auto publish
   #+END_SRC

[[./assets/publish.png]]

* License                                                                     :license:
MIT License

See the full text in the `LICENSE` file at the root of this repository.
