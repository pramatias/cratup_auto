#+TITLE: cratup_auto â€” Module Management Tool
#+AUTHOR: emporas
#+EMAIL: emporas@example.com
#+DATE: 2025-04-19
#+DESCRIPTION: A tool for automating version bumps, searches, and publishing of Rust crates.
#+KEYWORDS: rust, cargo, crates, automation, versioning
#+LANGUAGE: en
#+OPTIONS: toc:nil

* Table of Contents
- [[#overview][Overview]]
- [[#installation][Installation]]
- [[#configuration][Configuration]]
- [[#commands][Commands]]
  - [[#init][init]]
  - [[#incv][incv]]
  - [[#search][search]]
  - [[#publish][publish]]
  - [[#help][help]]
- [[#usage-examples][Usage Examples]]
- [[#license][License]]

* Overview                                                                     :overview:
`cratup_auto` is a CLI tool that helps you manage your Rust workspace by:
  - Automatically increasing local crate versions in `Cargo.toml` files
  - Searching for crates by name or version
  - Recursively publishing crates to crates.io

It scans the current directory tree for `Cargo.toml` files and increases version in all nested Cargo files. It is syntax aware, and there is not danger of accidentally modifying versions where it is not supposed to. It uses tree-sitter-toml to parse the toml file.

- The increase version subcommand, asks for confirmation before modifying anything.

- The search subcommand parses and returns all local packages alongside with their versions, or some of them depending of their search criteria.

- The publish command doesn't do dependency resolution, but it tries to publish all local packages one by one. Nested crates have to be published first, and when one nesting level succeeds, it will try to publish all packages again. Eventually all packages in all nesting levels will succeed, but the tool will try all packages every time until a nesting level succeeds.

* Installation                                                                 :installation:
Directly from crates.io:

#+BEGIN_SRC bash
cargo install cratup_auto
#+END_SRC


To install the latest version from source, run:

#+BEGIN_SRC bash
git clone https://github.com/your_org/cratup_auto.git
cd cratup_auto
cargo install --path .
#+END_SRC

Ensure you have Rust and Cargo (>=1.60) installed.
* Configuration :configuration:
Init saves just one flag, whether or not to ask so as to replace the old version with the new

#+BEGIN_SRC bash
cratup_auto init
#+END_SRC

* Commands :commands:

** incv :incv:
Increment one or more crate versions.

Flags:

  - `-i`, `--current-version <CURRENT>`   Version to replace (e.g. `0.4.1`).
  - `-r`, `--next-version <NEXT>`         New version to set (e.g. `0.4.2`).
  - `-p`, `--package-name <NAME>`         Optional specific crate to bump.
  - `-y`, `--yes`                         Skip confirmation prompt.
  - `-v`, `--verbose`                     Increase logging detail.
  - `-q`, `--quiet`                       Suppress non-error output.

** search :search:
Search for crates by name and/or version.

  - `-p`, `--package-name <PACKAGE>`  Filter by crate name (supports substring).
  - `-i`, `--version <VERSION>`       Filter by exact version (e.g. `0.4.1`).
  - `-v`, `--verbose`                 Show full path to each found `Cargo.toml`.
  - `-q`, `--quiet`                   Only list paths, no headers.

** publish :publish:

- No flags

** help                                                                       :help:
Prints all subcommands.
#+BEGIN_SRC bash
cratup_auto -h
#+END_SRC

Use `-h` / `--help` on any subcommand:

#+BEGIN_SRC bash
cratup_auto incv -h
#+END_SRC

* Usage Examples
:usage-examples:

** Version increase
   Bump only `my_crate` from `0.4.1` to `0.5.0` without prompts:

   #+BEGIN_SRC bash
   cratup_auto incv -p my_crate -i 0.4.1 -r 0.5.0 -y
   #+END_SRC

[[./assets/increase_version.png]]
** Version increase by specifying package
   Bump only `my_crate` from `0.4.1` to `0.5.0` without prompts:

   #+BEGIN_SRC bash
   cratup_auto incv -p my_crate -i 0.4.1 -r 0.5.0 -p package_name -y
   #+END_SRC

[[./assets/increase_version_with_package.png]]
** Search for all crates

   #+BEGIN_SRC bash
   cratup_auto search
   #+END_SRC

[[./assets/general_search.png]]
** Search for all crates

   #+BEGIN_SRC bash
   cratup_auto search -p half_name
   #+END_SRC

[[./assets/fuzzy_search.png]]

** Search for all crates at a given version

   #+BEGIN_SRC bash
   cratup_auto search -i 0.3.0
   #+END_SRC

[[./assets/search_version.png]]
** Search for all crates at a given version

   #+BEGIN_SRC bash
   cratup_auto search -i 0.3.0 -p package_name
   #+END_SRC

[[./assets/search_version_with_package.png]]

** Publish all version updates

   #+BEGIN_SRC bash
   cratup_auto publish
   #+END_SRC

[[./assets/publish.png]]

* License                                                                     :license:
MIT License

See the full text in the `LICENSE` file at the root of this repository.
